{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/SearchFilter/SearchFilter.module.css","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/phoneBook/phoneBook-selectors.js","redux/store.js","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/SearchFilter/SearchFilter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","dispatch","a","phoneBooksActions","fetchContactsRequest","get","data","fetchContactsSuccess","fetchContactsError","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","createAction","changeFilter","items","createReducer","_","payload","state","filter","combineReducers","getContacts","contacts","getFilter","getVisibleContacts","createSelector","toLowerCase","includes","getFilterContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phoneBooksReducer","devTools","process","Container","children","className","styles","Section","title","section","ContactForm","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","useDispatch","useSelector","phoneBooksSelectors","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","alert","find","phoneBooksOperations","form","htmlFor","label","type","input","pattern","required","onChange","btn","SearchFilter","lable","filters","target","ContactList","useEffect","list","map","key","item","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41688144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1qV1g\",\"item\":\"ContactList_item__2GZ1W\",\"btn\":\"ContactList_btn__3qLUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__61akL\",\"title\":\"Section_title__1C91t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"SearchFilter_lable__1GXb2\",\"filters\":\"SearchFilter_filters__QHwE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3K0-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1nzJx\",\"lable\":\"ContactForm_lable__TqH3n\",\"input\":\"ContactForm_input__2-Z7o\",\"btn\":\"ContactForm_btn__1YPJv\"};","import axios from 'axios';\r\nimport { phoneBooksActions } from '../../redux/phoneBook';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(phoneBooksActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(phoneBooksActions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(phoneBooksActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(phoneBooksActions.addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(phoneBooksActions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(phoneBooksActions.addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(phoneBooksActions.deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(phoneBooksActions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(phoneBooksActions.deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { phoneBooksActions } from '../phoneBook';\r\n\r\nconst items = createReducer([], {\r\n  [phoneBooksActions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [phoneBooksActions.addContactSuccess]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [phoneBooksActions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phoneBooksActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFilterContacts = contacts => {\r\n      return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase()),\r\n      );\r\n    };\r\n\r\n    return getFilterContacts(contacts);\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport { phoneBooksReducer } from '../redux/phoneBook';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phoneBooksReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { div } from 'prelude-ls';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  phoneBooksSelectors,\r\n  phoneBooksOperations,\r\n} from '../../redux/phoneBook';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phoneBooksSelectors.getContacts);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      return alert(`Введите, пожалуйста, имя контакта.`);\r\n    }\r\n\r\n    if (number === '') {\r\n      return alert(`Введите, пожалуйста, номер телефона контакта.`);\r\n    }\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      reset();\r\n      return alert(`${name} is already in contacts.`);\r\n    }\r\n    dispatch(phoneBooksOperations.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label htmlFor={nameInputId} className={styles.label}>\r\n        Name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          value={name}\r\n        ></input>\r\n      </label>\r\n      <label htmlFor={numberInputId} className={styles.label}>\r\n        Number\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          className={styles.input}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          value={number}\r\n        ></input>\r\n      </label>\r\n      <button type=\"submit\" className={styles.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phoneBooksSelectors, phoneBooksActions } from '../../redux/phoneBook';\r\nimport styles from './SearchFilter.module.css';\r\n\r\nconst SearchFilter = () => {\r\n  const value = useSelector(phoneBooksSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e =>\r\n    dispatch(phoneBooksActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={styles.lable}>\r\n      Find contact by name\r\n      <br />\r\n      <input\r\n        className={styles.filters}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport styles from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  phoneBooksSelectors,\r\n  phoneBooksOperations,\r\n} from '../../redux/phoneBook';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phoneBooksSelectors.getVisibleContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(phoneBooksOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const onDeleteContact = id =>\r\n    dispatch(phoneBooksOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={styles.item}>\r\n          {name}: {number}\r\n          <button onClick={() => onDeleteContact(id)} className={styles.btn}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport Container from './Components/Container';\r\nimport Section from './Components/Section';\r\nimport ContactForm from './Components/ContactForm';\r\nimport SearchFilter from './Components/SearchFilter';\r\nimport ContactList from './Components/ContactList';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Section title=\"PhoneBook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <SearchFilter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}